version: '3'
services:
  db:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    build: db
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
    restart: always

  app:
    container_name: ${COMPOSE_PROJECT_NAME}-app
    build:
      context: app
      dockerfile: ${ENVIRONMENT}.Dockerfile
      args:
        - CODE_REGISTRY=${CODE_REGISTRY}
        - APP_UID=${APP_UID}
        - APP_GID=${APP_GID}
    restart: always
    volumes:
      - ./app/.env:/var/www/app/.env:ro
      - ./app/google-app-credentials.json:/var/www/app/google-app-credentials.json:ro
      - app-storage:/var/www/app/storage:rw

  scheduler:
    container_name: ${COMPOSE_PROJECT_NAME}-scheduler
    build:
      context: app
      dockerfile: ${ENVIRONMENT}.Dockerfile
      args:
        - CODE_REGISTRY=${CODE_REGISTRY}
        - APP_UID=${APP_UID}
        - APP_GID=${APP_GID}
    user: "root:root"
    entrypoint:
      - "crond"
      - "-f"
      - "-l"
      - "8"
      - "-L"
      - "/dev/stdout"
    volumes:
      - ./app/.env:/var/www/app/.env:ro
      - ./app/google-app-credentials.json:/var/www/app/google-app-credentials.json:ro
      - app-storage:/var/www/app/storage:rw
    restart: always

  web:
    container_name: ${COMPOSE_PROJECT_NAME}-web
    build:
      context: web
      args:
        - CODE_REGISTRY=${CODE_REGISTRY}
        - HOST=${HOST}
        - DOLLAR=$$
        - SSL_CERT_PATH=${SSL_CERT_PATH}
        - SSL_CERT_KEY_PATH=${SSL_CERT_KEY_PATH}
        - APP_UID=${APP_UID}
        - APP_GID=${APP_GID}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - acme-challenge:/var/www/acme-challenge:ro
      - certs:/etc/letsencrypt/:ro
      - app-storage:/var/www/app/storage:ro
    depends_on:
      - app
    restart: always

  certbot:
    container_name: ${COMPOSE_PROJECT_NAME}-certbot
    build: certbot
    volumes:
      - acme-challenge:/var/www/acme-challenge
      - certs:/etc/letsencrypt/
    command: ["0 3 * * * certbot renew -m ${SSL_CERT_EMAIL} --agree-tos --cert-name ${SSL_CERT_DOMAIN}"]
    restart: always

volumes:
  app-storage:
  db-data:
  acme-challenge:
  certs: